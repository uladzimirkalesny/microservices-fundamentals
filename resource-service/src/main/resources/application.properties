server.port=8081

spring.application.name=resource-service

spring.datasource.url=jdbc:postgresql://${RESOURCE_SERVICE_POSTGRES:localhost}:${RESOURCE_SERVICE_POSTGRES_PORT:5432}/resource_service
spring.datasource.username=${RESOURCE_SERVICE_DATABASE_POSTGRES_USR:postgres}
spring.datasource.password=${RESOURCE_SERVICE_DATABASE_POSTGRES_PWD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.open-in-view=false

# Default values
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PWD:guest}

rabbitmq.exchange.name=resource.exchange
rabbitmq.queue.name=resource.processor.candidates

# Circuit Breaker Settings
resilience4j.circuitbreaker.instances.resource-processor.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.resource-processor.ring-buffer-size-in-closed-state=5
resilience4j.circuitbreaker.instances.resource-processor.ring-buffer-size-in-half-open-state=3
resilience4j.circuitbreaker.instances.resource-processor.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.resource-processor.failureRateThreshold=50
resilience4j.circuitbreaker.instances.resource-processor.record-exceptions[0]=com.epam.resourceservice.exception.ResourceServiceException
resilience4j.circuitbreaker.instances.resource-processor.record-exceptions[1]=java.lang.Exception

resilience4j.circuitbreaker.instances.resource-db.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.resource-db.ring-buffer-size-in-closed-state=5
resilience4j.circuitbreaker.instances.resource-db.ring-buffer-size-in-half-open-state=3
resilience4j.circuitbreaker.instances.resource-db.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.resource-db.failureRateThreshold=50
resilience4j.circuitbreaker.instances.resource-db.record-exceptions[0]=com.epam.resourceservice.exception.ResourceServiceException
resilience4j.circuitbreaker.instances.resource-db.record-exceptions[1]=java.lang.Exception


# Retry Settings
resilience4j.retry.instances.resource-processor.maxAttempts=3
resilience4j.retry.instances.resource-processor.waitDuration=10
resilience4j.retry.instances.resource-processor.enableExponentialBackoff=true
resilience4j.retry.instances.resource-processor.exponentialBackoffMultiplier=2
resilience4j.retry.instances.resource-processor.retryExceptions[0]=com.epam.resourceservice.exception.ResourceServiceException
resilience4j.retry.instances.resource-processor.retryExceptions[1]=org.springframework.amqp.AmqpException
resilience4j.retry.instances.resource-processor.retryExceptions[2]=java.lang.Exception

resilience4j.retry.instances.resource-db.maxAttempts=3
resilience4j.retry.instances.resource-db.waitDuration=10
resilience4j.retry.instances.resource-db.enableExponentialBackoff=true
resilience4j.retry.instances.resource-db.exponentialBackoffMultiplier=2
resilience4j.retry.instances.resource-db.retryExceptions[0]=java.util.concurrent.TimeoutException
resilience4j.retry.instances.resource-db.retryExceptions[1]=java.lang.Exception
resilience4j.retry.instances.resource-db.ignore-exceptions[0]=com.epam.resourceservice.exception.ResourceServiceException

# AWS Creds
access.key=${AWS_ACCESS_KEY:none}
secret.key=${AWS_SECRET_KEY:none}
region.name=${AWS_REGION_NAME:none}

# eureka client settings
eureka.instance.appname=resource-service
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_ZONE:http://localhost:8761/eureka/}